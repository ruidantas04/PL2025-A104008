=== Resultado do Teste 7 ===
Arquivo de entrada: ./Tests/Correct/test7.txt
Erros de sintaxe encontrados: 0

Program:
  Heading: ('program_heading', ('identifier', 'BinarioParaInteiro'))
  Block:
    Functions:
      FunctionDeclaration:
        Heading: ('function_heading_with_params', ('identifier', 'BinToInt'), ('formal_parameter_list', [('formal_parameter_section', ('value_parameter', [('identifier', 'bin')], ('type', 'string')))]), ('type', 'integer'))
        Body:
          Variables:
            VariableDeclaration:
              Identifiers: [('identifier', 'i'), ('identifier', 'valor'), ('identifier', 'potencia')]
              Type:
                integer
          Statements:
            CompoundStatement:
              AssignmentStatement:
                Variable:
                  VariableAccess: ('identifier', 'valor')
                Expression:
                  Constant: ('constant', ('integer', 0))
              AssignmentStatement:
                Variable:
                  VariableAccess: ('identifier', 'potencia')
                Expression:
                  Constant: ('constant', ('integer', 1))
              ForStatement:
                ControlVar: ('identifier', 'i')
                InitialValue:
                  FunctionCall:
                    Function: ('identifier', 'length')
                    Params:
                      ('actual_parameter', VariableAccess(identifier=('identifier', 'bin')))
                Direction: ('direction', 'downto')
                FinalValue:
                  Constant: ('constant', ('integer', 1))
                Body:
                  CompoundStatement:
                    IfStatement:
                      Condition:
                        BinaryExpression (=):
                          Left:
                            IndexedVariable:
                              Variable:
                                VariableAccess: ('identifier', 'bin')
                              Indices:
                                VariableAccess: ('identifier', 'i')
                          Right:
                            Constant: ('constant', '1')
                      Then:
                        AssignmentStatement:
                          Variable:
                            VariableAccess: ('identifier', 'valor')
                          Expression:
                            BinaryExpression (+):
                              Left:
                                VariableAccess: ('identifier', 'valor')
                              Right:
                                VariableAccess: ('identifier', 'potencia')
                    AssignmentStatement:
                      Variable:
                        VariableAccess: ('identifier', 'potencia')
                      Expression:
                        BinaryExpression (*):
                          Left:
                            VariableAccess: ('identifier', 'potencia')
                          Right:
                            Constant: ('constant', ('integer', 2))
              AssignmentStatement:
                Variable:
                  VariableAccess: ('identifier', 'BinToInt')
                Expression:
                  VariableAccess: ('identifier', 'valor')
    Variables:
      VariableDeclaration:
        Identifiers: [('identifier', 'bin')]
        Type:
          string
      VariableDeclaration:
        Identifiers: [('identifier', 'valor')]
        Type:
          integer
    Statements:
      CompoundStatement:
        ProcedureCall: writeln
          Arguments:
            ('actual_parameter', Constant(value=('constant', 'Introduza uma string binária:')))
        ProcedureCall: readln
          Arguments:
            ('actual_parameter', VariableAccess(identifier=('identifier', 'bin')))
        AssignmentStatement:
          Variable:
            VariableAccess: ('identifier', 'valor')
          Expression:
            FunctionCall:
              Function: ('identifier', 'BinToInt')
              Params:
                ('actual_parameter', VariableAccess(identifier=('identifier', 'bin')))
        ProcedureCall: writeln
          Arguments:
            ('actual_parameter', Constant(value=('constant', 'O valor inteiro correspondente é: ')))
            ('actual_parameter', VariableAccess(identifier=('identifier', 'valor')))
